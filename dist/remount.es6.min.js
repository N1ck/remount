(function(a,b){'object'==typeof exports&&'undefined'!=typeof module?b(exports,require('react'),require('react-dom')):'function'==typeof define&&define.amd?define(['exports','react','react-dom'],b):b(a.Remount={},a.React,a.ReactDOM)})(this,function(a,b,c){'use strict';function d(){if(p||void 0===window.Reflect||void 0===window.customElements||window.customElements.hasOwnProperty('polyfillWrapFlushCallback'))return;const b=HTMLElement;window.HTMLElement=function(){return Reflect.construct(b,[],this.constructor)},HTMLElement.prototype=b.prototype,HTMLElement.prototype.constructor=HTMLElement,Object.setPrototypeOf(HTMLElement,b),p=!0}function e(){return window.customElements&&window.customElements.define}function f(a,{shadow:b}){if(b){const b=document.createElement('span');return a.attachShadow({mode:'open'}).appendChild(b),b}return a}function g(){return!!window.MutationObserver}function h(a,b){const c=new window.MutationObserver(a=>{j(a,a=>{const c=a.target;b(c,c)})});c.observe(a,{attributes:!0})}function i(a,b){const c=a.parentNode,d=new window.MutationObserver(e=>{j(e,e=>{j(e.removedNodes,e=>{a!==e||(d.disconnect(c),b(a,a))})})});d.observe(c,{childList:!0,subtree:!0})}function j(a,b){for(let c=0,d=a.length;c<d;c++)b(a[c])}function k(a){return-1!==a.indexOf('-')&&a.match(/^[a-z][a-z0-9-]*$/)}function l({component:a,attributes:d},e,f){const g=b.createElement(a,f);c.render(g,e)}function m(a,b){c.unmountComponentAtNode(b)}function n(a){return'object'==typeof a&&a.component?a:{component:a}}function o(a,b){const c=a.getAttribute('props-json');if(c)return JSON.parse(c);return(b||[]).reduce((b,c)=>(b[c]=a.getAttribute(c),b),{})}c=c&&c.hasOwnProperty('default')?c['default']:c;let p;var q=Object.freeze({defineElement:function(a,b,{onUpdate:c,onUnmount:e}){d();const g=a.attributes||[];class h extends window.HTMLElement{static get observedAttributes(){return['props-json',...g]}connectedCallback(){this._mountPoint=f(this,a),c(this,this._mountPoint)}disconnectedCallback(){this._mountPoint&&e(this,this._mountPoint)}attributeChangedCallback(){this._mountPoint&&c(this,this._mountPoint)}}a.quiet&&window.customElements.get(b)||window.customElements.define(b,h)},isSupported:e,name:'CustomElements'});let r={};var s=Object.freeze({isSupported:g,defineElement:function(a,b,{onUpdate:c,onUnmount:d}){if(b=b.toLowerCase(),!k(b)){if(a.quiet)return;throw new Error(`Remount: "${b}" is not a valid custom element name`)}if(r[b]){if(a.quiet)return;throw new Error(`Remount: "${b}" is already registered`)}const e=new window.MutationObserver(a=>{j(a,a=>{j(a.addedNodes,a=>{a.nodeName.toLowerCase()!==b||(c(a,a),h(a,c),i(a,d))})})});e.observe(document.body,{childList:!0,subtree:!0}),r[b]=!0},name:'MutationObserver'});const t=e()?q:g()?s:null;t||console.warn('Remount: This browser doesn\'t support the MutationObserver API or the Custom Elements API. Including polyfills might fix this. Remount elements will not work. https://github.com/rstacruz/remount');const u=t&&t.name;a.adapterName=u,a.define=function(a,b){t&&Object.keys(a).forEach((c)=>{const d=Object.assign({},b,n(a[c]));t.defineElement(d,c,{onUpdate(a,b){const c=o(a,d.attributes);l(d,b,c)},onUnmount(a,b){m(d,b)}})})},Object.defineProperty(a,'__esModule',{value:!0})});

import{createElement}from'react';import ReactDOM from'react-dom';function define(a,b){Object.keys(a).forEach((c)=>{const d=toElementSpec(a[c]);defineOne(Object.assign({},b,d),c)})}function toElementSpec(a){return'object'==typeof a&&a.component?a:{component:a}}function defineOne(a,b){const c=a.attributes||[];class d extends window.HTMLElement{static get observedAttributes(){return['props-json',...c]}connectedCallback(){this._mountPoint=createMountPoint(this,a),update(this,a,this._mountPoint)}disconnectedCallback(){this._mountPoint&&ReactDOM.unmountComponentAtNode(this._mountPoint)}attributeChangedCallback(){this._mountPoint&&update(this,a,this._mountPoint)}}!ensureSupported()||a.quiet&&window.customElements.get(b)||window.customElements.define(b,d)}function ensureSupported(){return!!(window.customElements&&window.customElements.define)||(console.error('remount: Custom elements aren\'t support in this browser. Remount will not work. Including polyfills will likely fix this. See Remount documentation for more info: https://github.com/rstacruz/remount'),!1)}function createMountPoint(a,{shadow:b}){if(b){const b=document.createElement('span');return a.attachShadow({mode:'open'}).appendChild(b),b}return a}function update(a,{component:b,attributes:c},d){const e=a.hasAttribute('props-json')?JSON.parse(a.getAttribute('props-json')):getProps(a,c),f=createElement(b,e);ReactDOM.render(f,d)}function getProps(a,b){return(b||[]).reduce((b,c)=>(b[c]=a.getAttribute(c),b),{})}export{define};
